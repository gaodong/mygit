可选链
	基本结构
	if let streetName = person.address?.streetName {
		println("street name is \(streetName)")
	} else {
		...
	}

	1. 使用可选链替代强制解析(! , 例: person.address?.streetName)
	2. 使用可选链访问方法或属性、脚本，返回的依然为可选类型
		例: let streetName:String = person.address?.streetName
		其中虽然定义streetName为非可选的，但是实际返回的是可选属性
		例: let roomCount = person.residence?.numberOfRooms
	3. 多层可选链接
		if let johnsStreet = john.residence?.address?.streetName {
			...
		}
	4. 链接可选可选返回值方法
		例: class Address {

				func buildingIdentifier() -> String? {
					...
				}
			}

			if let buildingUpper = john.residence?.address?.buildingIdentifier()?.uppercaseString
			或
			if let building = john.residence?.address?.buildingIdentifier() {
				...
			}